From 52c0588d1a8551734cfbfd9d94f8d73a5ea718b4 Mon Sep 17 00:00:00 2001
From: Pascal Quantin <pascal.quantin@gmail.com>
Date: Sat, 28 Nov 2015 14:47:28 +0100
Subject: [PATCH 78/90] RSVP: copy all rsvp_request_key info in file scope

This is needed as it is later used for comparisons in the request hash table

Bug: 11793
Change-Id: I2ee1c894892c6ae88c4eac23237991b547a0983b
Reviewed-on: https://code.wireshark.org/review/12258
Reviewed-by: Michael Mann <mmann78@netscape.net>
Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
(cherry picked from commit 5d20997a35226fab09b87699fa7e6a30bf26ffd1)
Reviewed-on: https://code.wireshark.org/review/13765
Reviewed-by: Balint Reczey <balint@balintreczey.hu>
---
 epan/dissectors/packet-rsvp.c | 27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/epan/dissectors/packet-rsvp.c b/epan/dissectors/packet-rsvp.c
index 828c1cc..378b460 100644
--- a/epan/dissectors/packet-rsvp.c
+++ b/epan/dissectors/packet-rsvp.c
@@ -7385,7 +7385,7 @@ dissect_rsvp_common(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, gboolea
         break;
     }
 
-    SE_COPY_ADDRESS(&request_key.source_info.source, &rsvph->source);
+    COPY_ADDRESS_SHALLOW(&request_key.source_info.source, &rsvph->source);
     request_key.source_info.udp_source_port = rsvph->udp_source_port;
 
     /* See if a request with this key already exists */
@@ -7397,6 +7397,31 @@ dissect_rsvp_common(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, gboolea
     if (!request_val) {
         new_request_key = (struct rsvp_request_key *)wmem_memdup(
               wmem_file_scope(), &request_key, sizeof(struct rsvp_request_key));
+        switch (request_key.session_type) {
+        case RSVP_SESSION_TYPE_IPV4:
+            SE_COPY_ADDRESS(&new_request_key->u.session_ipv4.destination,
+                              &request_key.u.session_ipv4.destination);
+            break;
+        case RSVP_SESSION_TYPE_IPV4_LSP:
+            SE_COPY_ADDRESS(&new_request_key->u.session_ipv4_lsp.destination,
+                              &request_key.u.session_ipv4_lsp.destination);
+            break;
+        case RSVP_SESSION_TYPE_AGGREGATE_IPV4:
+            SE_COPY_ADDRESS(&new_request_key->u.session_agg_ipv4.destination,
+                              &request_key.u.session_agg_ipv4.destination);
+            break;
+        case RSVP_SESSION_TYPE_IPV4_UNI:
+            SE_COPY_ADDRESS(&new_request_key->u.session_ipv4_uni.destination,
+                              &request_key.u.session_ipv4_uni.destination);
+            break;
+        case RSVP_SESSION_TYPE_IPV4_E_NNI:
+            SE_COPY_ADDRESS(&new_request_key->u.session_ipv4_enni.destination,
+                              &request_key.u.session_ipv4_enni.destination);
+            break;
+        default:
+            break;
+        }
+        SE_COPY_ADDRESS(&new_request_key->source_info.source, &rsvph->source);
 
         request_val = wmem_new(wmem_file_scope(), struct rsvp_request_val);
         request_val->value = conversation->index;
-- 
2.1.4

