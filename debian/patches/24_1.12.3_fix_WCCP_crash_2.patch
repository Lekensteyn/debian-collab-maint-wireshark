From 7f8e46c6f41194c55909e052664e6f40040fe6ff Mon Sep 17 00:00:00 2001
From: Pascal Quantin <pascal.quantin@gmail.com>
Date: Fri, 26 Dec 2014 19:52:38 +0100
Subject: [PATCH 4/8] WCCP: initialize address table to 0

It prevents an uninitialized access later on if an exception is triggered before filling the table

Bug: 10806
Change-Id: I8f75fb18cd8d033013c34093f9d6c8762f23452b
Reviewed-on: https://code.wireshark.org/review/6056
Reviewed-by: Pascal Quantin <pascal.quantin@gmail.com>
(cherry picked from commit a442a1c0e815fd61416cf408bd74d85a042ccc6a)
Conflicts:
	epan/dissectors/packet-wccp.c
Reviewed-on: https://code.wireshark.org/review/6058
(cherry picked from commit adce5fa31f01e7894465b42de98b9a7ee69c152a)
Reviewed-on: https://code.wireshark.org/review/6464
Reviewed-by: Michael Mann <mmann78@netscape.net>
---
 epan/dissectors/packet-wccp.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/epan/dissectors/packet-wccp.c b/epan/dissectors/packet-wccp.c
index 26f003e..875d0d5 100644
--- a/epan/dissectors/packet-wccp.c
+++ b/epan/dissectors/packet-wccp.c
@@ -1916,7 +1916,7 @@ dissect_wccp2r1_address_table_info(tvbuff_t *tvb, int offset,
   case 1:
     if (wccp_wccp_address_table.table_ipv4 == NULL)
       wccp_wccp_address_table.table_ipv4 = (guint32 *)
-        wmem_alloc(pinfo->pool, wccp_wccp_address_table.table_length * 4);
+        wmem_alloc0(pinfo->pool, wccp_wccp_address_table.table_length * 4);
     if ((address_length != 4) && (pinfo && info_tree)) {
       expert_add_info_format(pinfo, tf, &ei_wccp_length_bad,
                              "The Address length must be 4, but I found  %d for IPv4 addresses. Correcting this.",
@@ -1927,7 +1927,7 @@ dissect_wccp2r1_address_table_info(tvbuff_t *tvb, int offset,
   case 2:
     if (wccp_wccp_address_table.table_ipv6 == NULL)
       wccp_wccp_address_table.table_ipv6 = (struct e_in6_addr *)
-        wmem_alloc(pinfo->pool, wccp_wccp_address_table.table_length * sizeof(struct e_in6_addr));
+        wmem_alloc0(pinfo->pool, wccp_wccp_address_table.table_length * sizeof(struct e_in6_addr));
     if ((address_length != 16) && (pinfo && info_tree)) {
       expert_add_info_format(pinfo, tf, &ei_wccp_length_bad,
                              "The Address length must be 16, but I found %d for IPv6 addresses.  Correcting this",
-- 
2.1.4

