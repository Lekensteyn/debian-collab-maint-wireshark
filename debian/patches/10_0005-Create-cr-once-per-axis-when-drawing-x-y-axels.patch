From f39ee806c4c210468908dbc6158a60967aac9c2e Mon Sep 17 00:00:00 2001
From: Anders Broman <anders.broman@ericsson.com>
Date: Thu, 8 Nov 2012 13:18:23 +0000
Subject: [PATCH 5/8] Create cr once per axis when drawing x,y axels.

svn path=/trunk/; revision=45971

Conflicts:
	ui/gtk/io_stat.c
---
 ui/gtk/io_stat.c |  240 +++++++++++++++++++++++-------------------------------
 1 file changed, 103 insertions(+), 137 deletions(-)

diff --git a/ui/gtk/io_stat.c b/ui/gtk/io_stat.c
index 8140ed1..cacaac1 100644
--- a/ui/gtk/io_stat.c
+++ b/ui/gtk/io_stat.c
@@ -881,104 +881,84 @@ io_stat_draw(io_stat_t *io)
 #else
 	cr = gdk_cairo_create (io->pixmap);
 #endif
-	cairo_set_line_width (cr, 1.0);
-	cairo_move_to(cr, io->surface_width-io->right_x_border+1.5, top_y_border + 0.5);
-	cairo_line_to(cr, io->surface_width-io->right_x_border+1.5, io->surface_height-bottom_y_border + 0.5);
-	cairo_stroke(cr);
-	cairo_destroy(cr);
-	if(io->max_y_units==LOGARITHMIC_YSCALE){
-		tics = (int)log10((double)max_y);
-		ystart = draw_height/10;
-		ys = -1;
-	} else {
-		tics = 10;
-		ystart=ys=0;
-	}
+    cairo_set_line_width (cr, 1.0);
+    cairo_move_to(cr, io->surface_width-io->right_x_border+1.5, top_y_border + 0.5);
+    cairo_line_to(cr, io->surface_width-io->right_x_border+1.5, io->surface_height-bottom_y_border + 0.5);
+    cairo_stroke(cr);
+    if(io->max_y_units==LOGARITHMIC_YSCALE){
+        tics = (int)log10((double)max_y);
+        ystart = draw_height/10;
+        ys = -1;
+    } else {
+        tics = 10;
+        ystart=ys=0;
+    }
 
 	for(i=ys;i<=tics;i++){
 		int xwidth, lwidth, ypos;
 
-		xwidth = 5;
-		if(io->max_y_units==LOGARITHMIC_YSCALE){
-			if (i==ys) {
-				/* position for the 0 value */
-				ypos=io->surface_height-bottom_y_border;
-			} else if (i==tics) {
-				/* position for the top value, do not draw logarithmic tics above graph */
-				ypos=io->surface_height-bottom_y_border-draw_height;
-			} else {
-				int j;
-				/* draw the logarithmic tics */
-				for(j=2; j<10; j++) {
-					ypos=(int)(io->surface_height-bottom_y_border-(draw_height-ystart)*(i+log10((double)j))/tics-ystart);
-					/* draw the tick */
-#if GTK_CHECK_VERSION(2,22,0)
-					cr = cairo_create (io->surface);
-#else
-					cr = gdk_cairo_create (io->pixmap);
-#endif
-					cairo_set_line_width (cr, 1.0);
-					cairo_move_to(cr, io->surface_width-io->right_x_border+1.5, ypos+0.5);
-					cairo_line_to(cr, io->surface_width-io->right_x_border+1.5+xwidth,ypos+0.5);
-					cairo_stroke(cr);
-					cairo_destroy(cr);
-				}
-				ypos=io->surface_height-bottom_y_border-(draw_height-ystart)*i/tics-ystart;
-			}
-			/* all "main" logarithmic lines are slightly longer */
-			xwidth=10;
-		} else {
-			if (!(i%5)) {
-				/* first, middle and last tick are slightly longer */
-				xwidth = 10;
-			}
-			ypos=io->surface_height-bottom_y_border-draw_height*i/10;
-		}
-		/* draw the tick */
-#if GTK_CHECK_VERSION(2,22,0)
-		cr = cairo_create (io->surface);
-#else
-		cr = gdk_cairo_create (io->pixmap);
-#endif
-		cairo_set_line_width (cr, 1.0);
-		cairo_move_to(cr, io->surface_width-io->right_x_border+1.5, ypos+0.5);
-		cairo_line_to(cr, io->surface_width-io->right_x_border+1.5+xwidth,ypos+0.5);
-		cairo_stroke(cr);
-		cairo_destroy(cr);
-		/* draw the labels */
-		if(xwidth==10) {
-			guint32 value;
-			if(io->max_y_units==LOGARITHMIC_YSCALE){
-				value = (guint32)(max_y / pow(10,tics-i));
-				if(draw_y_as_time){
-					print_time_scale_string(label_string, 15, value, value, TRUE);
-				} else {
-					g_snprintf(label_string, 15, "%d", value);
-				}
-			} else {
-				value = (max_y/10)*i;
-				if(draw_y_as_time){
-					print_time_scale_string(label_string, 15, value, max_y, FALSE);
-				} else {
-					g_snprintf(label_string, 15, "%d", value);
-				}
-			}
+        xwidth = 5;
+        if(io->max_y_units==LOGARITHMIC_YSCALE){
+            if (i==ys) {
+                /* position for the 0 value */
+                ypos=io->surface_height-bottom_y_border;
+            } else if (i==tics) {
+                /* position for the top value, do not draw logarithmic tics above graph */
+                ypos=io->surface_height-bottom_y_border-draw_height;
+            } else {
+                int j;
+                /* draw the logarithmic tics */
+                for(j=2; j<10; j++) {
+                    ypos=(int)(io->surface_height-bottom_y_border-(draw_height-ystart)*(i+log10((double)j))/tics-ystart);
+                    /* draw the tick */
+                    cairo_move_to(cr, io->surface_width-io->right_x_border+1.5, ypos+0.5);
+                    cairo_line_to(cr, io->surface_width-io->right_x_border+1.5+xwidth,ypos+0.5);
+                    cairo_stroke(cr);
+                }
+                ypos=io->surface_height-bottom_y_border-(draw_height-ystart)*i/tics-ystart;
+            }
+            /* all "main" logarithmic lines are slightly longer */
+            xwidth=10;
+        } else {
+            if (!(i%5)) {
+                /* first, middle and last tick are slightly longer */
+                xwidth = 10;
+            }
+            ypos=io->surface_height-bottom_y_border-draw_height*i/10;
+        }
+        /* draw the tick */
+        cairo_move_to(cr, io->surface_width-io->right_x_border+1.5, ypos+0.5);
+        cairo_line_to(cr, io->surface_width-io->right_x_border+1.5+xwidth,ypos+0.5);
+        cairo_stroke(cr);
+        /* draw the labels */
+        if(xwidth==10) {
+            guint32 value;
+            if(io->max_y_units==LOGARITHMIC_YSCALE){
+                value = (guint32)(max_y / pow(10,tics-i));
+                if(draw_y_as_time){
+                    print_time_scale_string(label_string, 15, value, value, TRUE);
+                } else {
+                    g_snprintf(label_string, 15, "%d", value);
+                }
+            } else {
+                value = (max_y/10)*i;
+                if(draw_y_as_time){
+                    print_time_scale_string(label_string, 15, value, max_y, FALSE);
+                } else {
+                    g_snprintf(label_string, 15, "%d", value);
+                }
+            }
 
 			pango_layout_set_text(layout, label_string, -1);
 			pango_layout_get_pixel_size(layout, &lwidth, NULL);
 
-#if GTK_CHECK_VERSION(2,22,0)
-			cr = cairo_create (io->surface);
-#else
-			cr = gdk_cairo_create (io->pixmap);
-#endif
-			cairo_move_to (cr, io->surface_width-io->right_x_border+15+label_width-lwidth, ypos-label_height/2);
-			pango_cairo_show_layout (cr, layout);
-			cairo_destroy (cr);
-			cr = NULL;
+            cairo_move_to (cr, io->surface_width-io->right_x_border+15+label_width-lwidth, ypos-label_height/2);
+            pango_cairo_show_layout (cr, layout);
 
 		}
 	}
+    cairo_destroy (cr);
+    cr = NULL;
 
 	/* If we have not specified the last_interval via the GUI, just pick the current end of the
 	 *  capture so that it scrolls nicely when doing live captures.
@@ -996,17 +976,16 @@ io_stat_draw(io_stat_t *io)
 #else
 		cr = gdk_cairo_create (io->pixmap);
 #endif
-		cairo_set_line_width (cr, 1.0);
-		cairo_move_to(cr, io->left_x_border+0.5, io->surface_height-bottom_y_border+1.5);
-		cairo_line_to(cr, io->surface_width-io->right_x_border+1.5,io->surface_height-bottom_y_border+1.5);
-		cairo_stroke(cr);
-		cairo_destroy(cr);
-	if((last_interval/io->interval)>=draw_width/io->pixels_per_tick){
-		first_interval=(last_interval/io->interval)-draw_width/io->pixels_per_tick+1;
-		first_interval*=io->interval;
-	} else {
-		first_interval=0;
-	}
+    cairo_set_line_width (cr, 1.0);
+    cairo_move_to(cr, io->left_x_border+0.5, io->surface_height-bottom_y_border+1.5);
+    cairo_line_to(cr, io->surface_width-io->right_x_border+1.5,io->surface_height-bottom_y_border+1.5);
+    cairo_stroke(cr);
+    if((last_interval/io->interval)>=draw_width/io->pixels_per_tick){
+        first_interval=(last_interval/io->interval)-draw_width/io->pixels_per_tick+1;
+        first_interval*=io->interval;
+    } else {
+        first_interval=0;
+    }
 
 	interval_delta=(100/io->pixels_per_tick)*io->interval;
 	for(current_interval=last_interval;current_interval>=(gint32)first_interval;current_interval=current_interval-io->interval){
@@ -1019,50 +998,37 @@ io_stat_draw(io_stat_t *io)
 			continue;
 		}
 
-		if(!(current_interval%interval_delta)){
-			xlen=10;
-		} else if(!(current_interval%(interval_delta/2))){
-			xlen=8;
-		} else {
-			xlen=5;
-		}
-		x=draw_width+io->left_x_border-((last_interval-current_interval)/io->interval)*io->pixels_per_tick;
-#if GTK_CHECK_VERSION(2,22,0)
-		cr = cairo_create (io->surface);
-#else
-		cr = gdk_cairo_create (io->pixmap);
-#endif
-		cairo_set_line_width (cr, 1.0);
-		cairo_move_to(cr, x-1-io->pixels_per_tick/2+0.5, io->surface_height-bottom_y_border+1.5);
-		cairo_line_to(cr, x-1-io->pixels_per_tick/2+0.5, io->surface_height-bottom_y_border+xlen+1.5);
-		cairo_stroke(cr);
-		cairo_destroy(cr);
-		if(xlen==10){
-			int lwidth, x_pos;
-			print_interval_string (label_string, 15, current_interval, io, TRUE);
-			pango_layout_set_text(layout, label_string, -1);
-			pango_layout_get_pixel_size(layout, &lwidth, NULL);
-
-			if ((x-1-io->pixels_per_tick/2-lwidth/2) < 5) {
-				x_pos=5;
-			} else if ((x-1-io->pixels_per_tick/2+lwidth/2) > (io->surface_width-5)) {
-				x_pos=io->surface_width-lwidth-5;
-			} else {
-				x_pos=x-1-io->pixels_per_tick/2-lwidth/2;
-			}
-#if GTK_CHECK_VERSION(2,22,0)
-			cr = cairo_create (io->surface);
-#else
-			cr = gdk_cairo_create (io->pixmap);
-#endif
-
+        if(!(current_interval%interval_delta)){
+            xlen=10;
+        } else if(!(current_interval%(interval_delta/2))){
+            xlen=8;
+        } else {
+            xlen=5;
+        }
+        x=draw_width+io->left_x_border-((last_interval-current_interval)/io->interval)*io->pixels_per_tick;
+        cairo_move_to(cr, x-1-io->pixels_per_tick/2+0.5, io->surface_height-bottom_y_border+1.5);
+        cairo_line_to(cr, x-1-io->pixels_per_tick/2+0.5, io->surface_height-bottom_y_border+xlen+1.5);
+        cairo_stroke(cr);
+        if(xlen==10){
+            int lwidth, x_pos;
+            print_interval_string (label_string, 15, current_interval, io, TRUE);
+            pango_layout_set_text(layout, label_string, -1);
+            pango_layout_get_pixel_size(layout, &lwidth, NULL);
+
+            if ((x-1-io->pixels_per_tick/2-lwidth/2) < 5) {
+                x_pos=5;
+            } else if ((x-1-io->pixels_per_tick/2+lwidth/2) > (io->surface_width-5)) {
+                x_pos=io->surface_width-lwidth-5;
+            } else {
+                x_pos=x-1-io->pixels_per_tick/2-lwidth/2;
+            }
             cairo_move_to (cr, x_pos, io->surface_height-bottom_y_border+15);
             pango_cairo_show_layout (cr, layout);
-            cairo_destroy (cr);
-            cr = NULL;
         }
 
     }
+    cairo_destroy (cr);
+    cr = NULL;
     g_object_unref(G_OBJECT(layout));
 
     /*
-- 
1.7.10.4

