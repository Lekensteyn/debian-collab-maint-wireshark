#! /bin/sh /usr/share/dpatch/dpatch-run
## 25_CVE-2007-6113.dpatch by  <balint@balintreczey.hu>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: CVE-2007-6113, backported from 0.99.7

@DPATCH@
--- etch/epan/dissectors/packet-dnp.c.orig	2009-12-26 21:14:12.000000000 +0100
+++ etch/epan/dissectors/packet-dnp.c	2009-12-27 21:08:01.000000000 +0100
@@ -40,6 +40,7 @@
 #include <epan/packet.h>
 #include <epan/prefs.h>
 #include <epan/reassemble.h>
+#include <epan/expert.h>
 
 /*
  * See
@@ -1136,16 +1137,17 @@
 /*  Returns: New offset pointer into tvb                         */
 /*****************************************************************/
 static int
-dnp3_al_process_object(tvbuff_t *tvb, int offset, proto_tree *robj_tree)
+dnp3_al_process_object(tvbuff_t *tvb, packet_info *pinfo, int offset, proto_tree *robj_tree)
 {
 
   guint8        al_objq, al_objq_index, al_objq_code, al_ptflags, al_ctlobj_code,
                 al_ctlobj_code_c, al_ctlobj_code_m, al_ctlobj_code_tc, al_ctlobj_count, al_bi_val, bitindex=0;
-  guint16       al_obj, temp16=0, al_val16=0, al_ctlobj_stat;
-  guint32       al_val32, num_items=0, al_ptaddr=0, al_ctlobj_on, al_ctlobj_off;
+  guint16       al_obj, al_val16=0, al_ctlobj_stat;
+  guint32       al_val32, al_ptaddr=0, al_ctlobj_on, al_ctlobj_off;
   gboolean      al_bit;
   guint         temp_pos;
-  int           rangebytes=0, indexbytes=0;
+  int           temp16=0, num_items=0;
+  int           start_offset, rangebytes=0, indexbytes=0;
   proto_item    *t_objdet = NULL, *t_point = NULL, *qualifier_item = NULL, *range_item = NULL;
   proto_tree    *objdet_tree = NULL, *qualifier_tree, *range_tree;
   const gchar   *ctl_code_str, *ctl_misc_str, *ctl_tc_str, *ctl_status_str;
@@ -1203,7 +1205,7 @@
       PROTO_ITEM_SET_GENERATED(range_item);
       al_ptaddr = tvb_get_letohl(tvb, offset);
       proto_tree_add_item(range_tree, hf_dnp3_al_range_start32, tvb, offset, 4, TRUE);
-      proto_tree_add_item(range_tree, hf_dnp3_al_range_stop32, tvb, offset + 4, 2, TRUE);
+      proto_tree_add_item(range_tree, hf_dnp3_al_range_stop32, tvb, offset + 4, 4, TRUE);
       rangebytes = 8;
       break;
     case AL_OBJQL_CODE_AA8:            /* 8-bit Absolute Address in Range Field */
@@ -1253,6 +1255,7 @@
   bitindex = 0; /* Temp variable for cycling through points when object values are encoded into
             bits; primarily objects 0x0101 & 0x1001 */
 
+  start_offset = offset;
   for (temp16 = 0; temp16 < num_items; temp16++)
   {
     switch (al_obj)
@@ -1613,6 +1616,11 @@
     }
 
     bitindex += 1;
+
+    if (start_offset >= offset) {
+       expert_add_info_format(pinfo, t_point, PI_MALFORMED, PI_ERROR, "Invalid length");
+       offset = tvb_length(tvb); /* Finish decoding if unknown object is encountered... */
+    }
   }
 
   return offset;
@@ -1694,7 +1702,7 @@
 
         /* Process Data Object Details */
         while (offset <= (data_len-2))  {  /* 2 octet object code + CRC32 */
-          offset = dnp3_al_process_object(tvb, offset, robj_tree);
+          offset = dnp3_al_process_object(tvb, pinfo, offset, robj_tree);
         }
 
         break;
@@ -1707,7 +1715,7 @@
 
         /* Process Data Object Details */
         while (offset <= (data_len-2))  {  /* 2 octet object code + CRC32 */
-          offset = dnp3_al_process_object(tvb, offset, robj_tree);
+          offset = dnp3_al_process_object(tvb, pinfo, offset, robj_tree);
         }
 
         break;
@@ -1720,7 +1728,7 @@
 
         /* Process Data Object Details */
         while (offset <= (data_len-2))  {  /* 2 octet object code + CRC32 */
-          offset = dnp3_al_process_object(tvb, offset, robj_tree);
+          offset = dnp3_al_process_object(tvb, pinfo, offset, robj_tree);
         }
 
         break;
@@ -1734,7 +1742,7 @@
 
         /* Process Data Object Details */
         while (offset <= (data_len-2))  {  /* 2 octet object code + CRC32 */
-          offset = dnp3_al_process_object(tvb, offset, robj_tree);
+          offset = dnp3_al_process_object(tvb, pinfo, offset, robj_tree);
         }
 
         break;
@@ -1748,7 +1756,7 @@
 
         /* Process Data Object Details */
         while (offset <= (data_len-2))  {  /* 2 octet object code + CRC32 */
-          offset = dnp3_al_process_object(tvb, offset, robj_tree);
+          offset = dnp3_al_process_object(tvb, pinfo, offset, robj_tree);
         }
 
         break;
@@ -1761,7 +1769,7 @@
 
         /* Process Data Object Details */
         while (offset <= (data_len-2))  {  /* 2 octet object code + CRC32 */
-          offset = dnp3_al_process_object(tvb, offset, robj_tree);
+          offset = dnp3_al_process_object(tvb, pinfo, offset, robj_tree);
         }
 
         break;
@@ -1789,7 +1797,7 @@
 
           /* Process Data Object Details */
           while (offset <= (data_len-2)) {  /* 2 octet object code + CRC32 */
-            offset = dnp3_al_process_object(tvb, offset, robj_tree);
+            offset = dnp3_al_process_object(tvb, pinfo, offset, robj_tree);
           }
 
           break;
