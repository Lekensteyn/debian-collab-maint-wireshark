#! /bin/sh /usr/share/dpatch/dpatch-run
## 04_drop-capabilities.dpatch by  <fpeters@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Drop all capabilities but CAP_NET_RAW

@DPATCH@
diff -urNad wireshark-0.99.7~pre1~/configure.in wireshark-0.99.7~pre1/configure.in
--- wireshark-0.99.7~pre1~/configure.in	2007-11-22 17:57:27.000000000 +0100
+++ wireshark-0.99.7~pre1/configure.in	2007-11-22 19:49:04.123227069 +0100
@@ -1092,6 +1092,7 @@
 	AC_WIRESHARK_LIBCAP_CHECK
 fi
 AC_SUBST(LIBCAP_LIBS)
+LIBS="$LIBS $LIBCAP_LIBS"
 
 dnl Checks for header files.
 AC_HEADER_STDC
diff -urNad wireshark-0.99.7~pre1~/gtk/main.c wireshark-0.99.7~pre1/gtk/main.c
--- wireshark-0.99.7~pre1~/gtk/main.c	2007-11-22 17:57:26.000000000 +0100
+++ wireshark-0.99.7~pre1/gtk/main.c	2007-11-22 19:47:17.867228596 +0100
@@ -1827,6 +1827,9 @@
 {
     gchar *capture_msg;
 
+#ifdef HAVE_LIBCAP
+  dropexcesscapabilities();
+#endif
 
 	gtk_statusbar_pop(GTK_STATUSBAR(packets_bar), packets_ctx);
 
diff -urNad wireshark-0.99.7~pre1~/tshark.c wireshark-0.99.7~pre1/tshark.c
--- wireshark-0.99.7~pre1~/tshark.c	2007-11-22 17:57:25.000000000 +0100
+++ wireshark-0.99.7~pre1/tshark.c	2007-11-22 19:47:17.871228775 +0100
@@ -792,6 +792,10 @@
   capture_opts_init(&capture_opts, NULL /* cfile */);
 #endif
 
+#ifdef HAVE_LIBCAP
+  dropexcesscapabilities();
+#endif
+
   timestamp_set_type(TS_RELATIVE);
   timestamp_set_precision(TS_PREC_AUTO);
 
diff -urNad wireshark-0.99.7~pre1~/util.c wireshark-0.99.7~pre1/util.c
--- wireshark-0.99.7~pre1~/util.c	2007-11-22 17:57:26.000000000 +0100
+++ wireshark-0.99.7~pre1/util.c	2007-11-22 19:47:17.871228775 +0100
@@ -41,6 +41,10 @@
 #include <epan/addr_resolv.h>
 #include <epan/ws_strsplit.h>
 
+#ifdef HAVE_LIBCAP
+#include <sys/capability.h>
+#endif
+
 #include "util.h"
 
 /*
@@ -317,3 +321,46 @@
 	}
 	return "";
 }
+
+
+#ifdef HAVE_LIBCAP
+void dropexcesscapabilities(void)
+{
+	cap_t cap_d;
+	cap_value_t cap_values[] = {
+		/* capabilities we need to keep */
+		CAP_NET_RAW,
+		CAP_DAC_READ_SEARCH
+	};
+	cap_flag_value_t current_cap;
+
+	cap_d = cap_get_proc();
+	if (!cap_d) {
+		g_warning("Could not get capabilities\n");
+		return;
+	}
+
+	cap_get_flag(cap_d, CAP_NET_RAW, CAP_EFFECTIVE, &current_cap);
+	cap_free(&cap_d);
+	if (current_cap == CAP_CLEAR) {
+		return;
+	}
+
+	cap_d = cap_init();
+	if (!cap_d) {
+		g_warning("Could not alloc cap struct\n");
+		return;
+	}
+
+	cap_clear(cap_d);
+	cap_set_flag(cap_d, CAP_PERMITTED, 2, cap_values, CAP_SET);
+	cap_set_flag(cap_d, CAP_EFFECTIVE, 2, cap_values, CAP_SET);
+
+	if (cap_set_proc(cap_d) != 0) {
+		g_warning("Could not set capabilities: %s\n", strerror(errno));
+		cap_free(&cap_d);
+		return;
+	}
+	cap_free(&cap_d);
+}
+#endif /* HAVE_LIBCAP */
diff -urNad wireshark-0.99.7~pre1~/util.h wireshark-0.99.7~pre1/util.h
--- wireshark-0.99.7~pre1~/util.h	2007-11-22 17:57:25.000000000 +0100
+++ wireshark-0.99.7~pre1/util.h	2007-11-22 19:47:17.871228775 +0100
@@ -53,6 +53,15 @@
 const char *get_conn_cfilter(void);
 
 
+#ifdef HAVE_LIBCAP
+/*
+ * Limit the potential impact of undiscovered security vulnerabilities by
+ * dropping all capabilities except the sniffer capability we need to do our
+ * job.
+ */
+void dropexcesscapabilities(void);
+#endif /* HAVE_LIBCAP */
+
 #ifdef __cplusplus
 }
 #endif /* __cplusplus */
