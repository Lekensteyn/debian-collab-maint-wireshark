#! /bin/sh /usr/share/dpatch/dpatch-run
## Backports of Wireshark security issues fixed in 0.99.7
##
## All lines beginning with `## DP:' are a description of the patch.

@DPATCH@
diff -Naurw wireshark-0.99.4.orig/epan/dissectors/packet-btsdp.c wireshark-0.99.4/epan/dissectors/packet-btsdp.c
--- wireshark-0.99.4.orig/epan/dissectors/packet-btsdp.c	2006-10-31 18:59:05.000000000 +0100
+++ wireshark-0.99.4/epan/dissectors/packet-btsdp.c	2007-11-23 09:42:07.000000000 +0100
@@ -326,6 +326,8 @@
 					    tvb_get_ntohs(tvb, offset + 3));
 			offset+=5;
 			bytes_to_go-=5;
+		} else {
+			break;
 		}
 	}
 	return offset - start_offset;
@@ -462,6 +464,9 @@
 			}
 
 			size = dissect_sdp_type(st, tvb, offset, &substr);
+			if (size < 1) {
+				break;
+			}
 			if(strpos<MAX_SDP_LEN){
 				strpos+=g_snprintf(str+strpos, MAX_SDP_LEN-strpos, "%s ", substr);
 			}
@@ -600,6 +605,9 @@
 	while(bytes_to_go>0) {
 		size = dissect_sdp_type(st, tvb, offset, &str);
 		proto_item_append_text(st, " %s", str);
+		if (size < 1) {
+			break;
+		}
 		offset+=size;
 		bytes_to_go-=size;
 	}
@@ -669,6 +677,9 @@
 		char *str;
 		size = dissect_sdp_type(st, tvb, offset, &str);
 		proto_item_append_text(st, " %s", str);
+		if (size < 1) {
+			break;
+		}
 		offset+=size;
 		bytes_to_go-=size;
 	}
@@ -690,7 +701,7 @@
 {
 	proto_tree *st;
 	proto_item *ti;
-	guint16 curr_count;
+	gint curr_count;
 	
 	proto_tree_add_item(t, hf_ssr_total_count, tvb, offset, 2, FALSE);
 	offset+=2;
diff -Naurw wireshark-0.99.4.orig/epan/dissectors/packet-http.c wireshark-0.99.4/epan/dissectors/packet-http.c
--- wireshark-0.99.4.orig/epan/dissectors/packet-http.c	2006-10-31 18:59:06.000000000 +0100
+++ wireshark-0.99.4/epan/dissectors/packet-http.c	2007-11-23 09:42:31.000000000 +0100
@@ -1050,12 +1050,6 @@
 				add_new_data_source(pinfo, next_tvb,
 				    "Uncompressed entity body");
 			} else {
-				if (chunks_decoded > 1) {
-					tvb_set_child_real_data_tvbuff(tvb,
-					    next_tvb);
-					add_new_data_source(pinfo, next_tvb,
-					    "Compressed entity body");
-				}
 				call_dissector(data_handle, next_tvb, pinfo,
 				    e_tree);
 
diff -Naurw wireshark-0.99.4.orig/epan/dissectors/packet-rpc.c wireshark-0.99.4/epan/dissectors/packet-rpc.c
--- wireshark-0.99.4.orig/epan/dissectors/packet-rpc.c	2006-10-31 18:59:07.000000000 +0100
+++ wireshark-0.99.4/epan/dissectors/packet-rpc.c	2007-11-23 09:42:43.000000000 +0100
@@ -1252,6 +1252,7 @@
 {
 	const char *saved_proto;
 
+	tvb_ensure_length_remaining(tvb, offset);
 	if (dissect_function != NULL) {
 		/* set the current protocol name */
 		saved_proto = pinfo->current_proto;
diff -Naurw wireshark-0.99.4.orig/epan/dissectors/packet-ssl.c wireshark-0.99.4/epan/dissectors/packet-ssl.c
--- wireshark-0.99.4.orig/epan/dissectors/packet-ssl.c	2006-10-31 18:59:07.000000000 +0100
+++ wireshark-0.99.4/epan/dissectors/packet-ssl.c	2007-11-23 09:42:49.000000000 +0100
@@ -466,7 +466,7 @@
                                SslDecryptSession* ssl);
 
 /* client hello dissector */
-static void dissect_ssl2_hnd_client_hello(tvbuff_t *tvb,
+static void dissect_ssl2_hnd_client_hello(tvbuff_t *tvb, packet_info *pinfo,
                                           proto_tree *tree,
                                           guint32 offset,
                                           SslDecryptSession* ssl);
@@ -2271,7 +2271,7 @@
         /* dissect the message (only handle client hello right now) */
         switch (msg_type) {
         case SSL2_HND_CLIENT_HELLO:
-            dissect_ssl2_hnd_client_hello(tvb, ssl_record_tree, offset, ssl);
+            dissect_ssl2_hnd_client_hello(tvb, pinfo, ssl_record_tree, offset, ssl);
             break;
 
         case SSL2_HND_CLIENT_MASTER_KEY:
@@ -2323,7 +2323,7 @@
 }
 
 static void
-dissect_ssl2_hnd_client_hello(tvbuff_t *tvb,
+dissect_ssl2_hnd_client_hello(tvbuff_t *tvb, packet_info *pinfo,
                               proto_tree *tree, guint32 offset,
                               SslDecryptSession* ssl)
 {
@@ -2375,6 +2375,15 @@
         if (tree)
             proto_tree_add_item(tree, hf_ssl2_handshake_session_id_len,
                             tvb, offset, 2, FALSE);
+        if (session_id_length > SSLV2_MAX_SESSION_ID_LENGTH_IN_BYTES) {
+                proto_tree_add_text(tree, tvb, offset, 2,
+                    "Invalid session ID length: %d", session_id_length);
+                expert_add_info_format(pinfo, NULL, PI_MALFORMED, PI_ERROR,
+                    "Session ID length (%u) must be less than %u.",
+                    session_id_length, SSLV2_MAX_SESSION_ID_LENGTH_IN_BYTES);
+                offset = tvb_length(tvb);
+                return;
+        }
         offset += 2;
 
         challenge_length = tvb_get_ntohs(tvb, offset);
diff -Naurw wireshark-0.99.4.orig/epan/dissectors/packet-ssl-utils.h wireshark-0.99.4/epan/dissectors/packet-ssl-utils.h
--- wireshark-0.99.4.orig/epan/dissectors/packet-ssl-utils.h	2006-10-31 18:58:57.000000000 +0100
+++ wireshark-0.99.4/epan/dissectors/packet-ssl-utils.h	2007-11-23 09:42:47.000000000 +0100
@@ -578,6 +578,8 @@
 
 #define SSL_DEBUG_USE_STDERR "-"
 
+#define SSLV2_MAX_SESSION_ID_LENGTH_IN_BYTES 16
+
 typedef struct _SslCipherSuite {
      gint number;
      gint kex;
diff -Naurw wireshark-0.99.4.orig/plugins/megaco/packet-megaco.c wireshark-0.99.4/plugins/megaco/packet-megaco.c
--- wireshark-0.99.4.orig/plugins/megaco/packet-megaco.c	2006-10-31 18:52:58.000000000 +0100
+++ wireshark-0.99.4/plugins/megaco/packet-megaco.c	2007-11-23 09:48:26.000000000 +0100
@@ -1764,10 +1764,11 @@
 
 			}
 
+			tvb_previous_offset = tvb_current_offset;
 			tvb_current_offset  = tvb_find_guint8(tvb, tvb_RBRKT,
 				tvb_events_end_offset, ',');
 
-			if (tvb_current_offset == -1 || tvb_current_offset > tvb_events_end_offset ){
+			if (tvb_current_offset == -1 || tvb_current_offset > tvb_events_end_offset || tvb_current_offset < tvb_previous_offset ) {
 				tvb_current_offset = tvb_events_end_offset;
 			}
 
diff -Naurw wireshark-0.99.4.orig/wiretap/iseries.c wireshark-0.99.4/wiretap/iseries.c
--- wireshark-0.99.4.orig/wiretap/iseries.c	2006-10-31 18:59:54.000000000 +0100
+++ wireshark-0.99.4/wiretap/iseries.c	2007-11-23 09:41:43.000000000 +0100
@@ -506,7 +506,7 @@
       /* look for packet header */
       num_items_scanned =
 	sscanf (data,
-		"%6d   %1s   %6d  %d:%d:%d.%d               %12s  %12s  ETHV2   Type: %s",
+		"%6d   %1s   %6d  %d:%d:%d.%d               %12s  %12s  ETHV2   Type: %4s",
 		&pktnum, direction, &cap_len, &hr, &min, &sec, &csec, destmac,
 		srcmac, type);
       if (num_items_scanned == 10)
