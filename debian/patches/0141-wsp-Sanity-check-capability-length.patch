From 3521c336128406bd1473b61c0dab1a884c43b1d3 Mon Sep 17 00:00:00 2001
From: Michael Mann <mmann78@netscape.net>
Date: Tue, 24 Jan 2017 22:40:07 -0500
Subject: [PATCH 141/144] wsp: Sanity check capability length

Conflicts:
	epan/dissectors/packet-wsp.c

Bug: 13348
Change-Id: I64abc79475087f1c971419629b5c86e646123f3f
Reviewed-on: https://code.wireshark.org/review/19776
Reviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>
Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
Reviewed-by: Anders Broman <a.broman58@gmail.com>
(cherry picked from commit cfe7b85b86455e1d62f4c914836ee5baf18831d4)
Reviewed-on: https://code.wireshark.org/review/19791
Reviewed-by: Michael Mann <mmann78@netscape.net>
(cherry picked from commit b708d4e6b4950055654530f3d409f8298e698705)
Reviewed-on: https://code.wireshark.org/review/19792
Petri-Dish: Michael Mann <mmann78@netscape.net>
Reviewed-on: https://code.wireshark.org/review/20500
Reviewed-by: Balint Reczey <balint@balintreczey.hu>
---
 epan/dissectors/packet-wsp.c | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/epan/dissectors/packet-wsp.c b/epan/dissectors/packet-wsp.c
index f0e356a..25e4774 100644
--- a/epan/dissectors/packet-wsp.c
+++ b/epan/dissectors/packet-wsp.c
@@ -47,6 +47,7 @@
 #include <epan/to_str.h>
 #include <epan/wmem/wmem.h>
 #include <epan/conversation.h>
+#include <epan/expert.h>
 
 #include "packet-wap.h"
 #include "packet-wsp.h"
@@ -342,6 +343,7 @@ static int ett_sir                      = ETT_EMPTY;
 static int ett_addresses                = ETT_EMPTY;
 static int ett_address                  = ETT_EMPTY;
 
+static expert_field ei_wsp_capability_length_invalid = EI_INIT;
 
 
 /* Handle for WSP-over-UDP dissector */
@@ -4928,6 +4930,7 @@ dissect_wsp_common(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
     tvbuff_t   *tmp_tvb;
     gboolean    found_match;
     heur_dtbl_entry_t *hdtbl_entry;
+    proto_item* ti;
 
 /* Set up structures we will need to add the protocol subtree and manage it */
     proto_item *proto_ti = NULL; /* for the proto entry */
@@ -5027,9 +5030,14 @@ dissect_wsp_common(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree,
                 }
                 count = 0;  /* Initialise count */
                 capabilityLength = tvb_get_guintvar (tvb, offset, &count);
-                proto_tree_add_uint (wsp_tree, hf_capabilities_length,
+                ti = proto_tree_add_uint (wsp_tree, hf_capabilities_length,
                         tvb, offset, count, capabilityLength);
                 offset += count;
+                if (capabilityLength > tvb_reported_length(tvb))
+                {
+                        expert_add_info(pinfo, ti, &ei_wsp_capability_length_invalid);
+                        break;
+                }
 
                 if (pdut != WSP_PDU_RESUME)
                 {
@@ -7274,6 +7282,12 @@ proto_register_wsp(void)
         &ett_address        /* Single address */
     };
 
+    static ei_register_info ei[] = {
+      { &ei_wsp_capability_length_invalid, { "wsp.capabilities.length.invalid", PI_PROTOCOL, PI_WARN, "Invalid capability length", EXPFILL }},
+    };
+
+    expert_module_t* expert_wsp;
+
 /* Register the protocol name and description */
     proto_wsp = proto_register_protocol(
         "Wireless Session Protocol",    /* protocol name for use by wireshark */
@@ -7292,6 +7306,8 @@ proto_register_wsp(void)
 /* Required function calls to register the header fields and subtrees used  */
     proto_register_field_array(proto_wsp, hf, array_length(hf));
     proto_register_subtree_array(ett, array_length(ett));
+    expert_wsp = expert_register_protocol(proto_wsp);
+    expert_register_field_array(expert_wsp, ei, array_length(ei));
 
     register_dissector("wsp-co", dissect_wsp_fromwap_co, proto_wsp);
     register_dissector("wsp-cl", dissect_wsp_fromwap_cl, proto_wsp);
-- 
2.1.4

